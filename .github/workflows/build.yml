name: CI
on: [push, pull_request]

env:
  ubuntu_image: "ubuntu:22.04"

jobs:

  addon_node:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 18.x ]
    steps:
      - name: Clone
        uses: actions/checkout@v1

      - name: Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake libsdl2-dev

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install & Compile
        working-directory: examples/addon.node
        run: |
          pwd
          npm install
          npx -y cmake-js compile -T whisper-addon -B Release
          du -sh *
          

  # emscripten:
  #   runs-on: ubuntu-latest

  #   strategy:
  #     matrix:
  #       build: [Release]

  #   steps:
  #     - name: Clone
  #       uses: actions/checkout@v3

  #     - name: Setup emsdk
  #       uses: mymindstorm/setup-emsdk@v12

  #     - name: Verify
  #       run: emcc -v

  #     - name: Build
  #       run: |
  #         ./build.sh
  #         cd whisper.cpp
  #         emcmake cmake . -DCMAKE_BUILD_TYPE=${{ matrix.build }}
  #         make
  #         du -sh bin/*

  #     - name: Upload the vendor artifact
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: whisper-bin
  #         path: whisper.cpp/bin

  #     - name: Upload the npm package artifact
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: whisper-npm
  #         path: whisper.cpp/bindings/javascript

  # android:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Clone
  #       uses: actions/checkout@v3

  #     - name: Install Java
  #       uses: actions/setup-java@v3
  #       with:
  #         distribution: zulu
  #         java-version: 17

  #     - name: Setup Android SDK
  #       uses: android-actions/setup-android@v2

  #     - name: Build
  #       run: |
  #         cd examples/whisper.android
  #         ./gradlew assembleRelease --no-daemon


